openapi: 3.0.0
info:
  title: Arbitrage Services API
  version: 0.1.0

servers:
  - url: https://185.240.103.242:50051

paths:
  /signup:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                name:
                  type: string
                  required: true
                telegram:
                  type: string
                  required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string

        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '408':
          description: User already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /login:
    post:
      summary: Вход в аккаунт
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  user_info:
                    $ref: '#/components/schemas/user_info'

        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '402':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '403':
          description: Wrong password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /logout:
    post:
      summary: Выход
      security:
        - bearer_auth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '401':
          description: Authorization invalids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /refresh:
    post:
      summary: Обновление refresh_token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success

        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '404':
          description: Wrong refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /info:
    get:
      summary: Получение информации о пользователе
      security:
        - bearer_auth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_info:
                    $ref: '#/components/schemas/user_info'

        '401':
          description: Authorization invalids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '402':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '405':
          description: Invalid signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '406':
          description: Token expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

    post:
      summary: Изменение параметров пользователя
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_info'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '401':
          description: Authorization invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '402':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '405':
          description: Invalid signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '406':
          description: Token expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '407':
          description: Invalid parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /pay:
    post:
      summary: Оплата
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_amount:
                  type: string
                  required: true
                  description: Сумма оплаты
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    description: Ссылка для оплаты

        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '401':
          description: Authorization invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '407':
          description: Invalid parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /password/recover:
    get:
      summary: Восстановление пароля
      parameters:
        - name: email
          in: query
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '401':
          description: Authorization invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '402':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

    post:
      summary: Проверка кода
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
        '407':
          description: Code is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /password/change:
    post:
      summary: Изменение пароля
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'
        '401':
          description: Authorization invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /notifications:
    get:
      summary: Получение уведомлений пользователя
      security:
        - bearer_auth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'

        '401':
          description: Authorization invalids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

    post:
      summary: Отметить уведомление прочитанным
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  required: true
                  description: id уведомления

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '401':
          description: Authorization invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /spreads:
    get:
      summary: Получение спредов
      security:
        - bearer_auth: []
      parameters:
        - name: page
          in: query
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spread'
                  page:
                    type: integer
                  last_page:
                    type: integer

        '400':
          description: Required parameter is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

        '401':
          description: Authorization invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message'

  /general/videos:
    get:
      summary: Ссылки на видео для блока на главной странице
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  videos:
                    type: array
                    items:
                      type: object
                      properties:
                        link:
                          type: string
                        image:
                          type: string
                          description: Путь к картинке

  /general/subscriptions:
    get:
      summary: Виды подписок
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  subscriptions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        price:
                          type: integer

  /general/markets:
    get:
      summary: Список бирж и их названия
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  markets:
                    type: array
                    items:
                      type: object
                      properties:
                        market:
                          type: string
                          description: Системное название, например, "gateio"
                        name:
                          type: string
                          description: Название биржи, например "Gate.io"

components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    user_info:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
        telegram:
          type: string
        email:
          type: string
          description: Почта
        page:
          type: integer
          description: Страница, на которой находится пользователь (нумерация с нуля)
        max_pages:
          type: integer
          description: Всего страниц для пользователя
        monitoring:
          type: boolean
          description: false - не присылать уведомления, true - присылать
        profit_spread:
          type: string
          description: Спред в долларах
        percent_spread:
          type: string
          description: Спред в процентах
        fee:
          type: string
          description: Максимальная комиссия
        hedge_type:
          type: boolean
          description: false - любые монеты, true - только хедж
        risk_type:
          type: integer
          description: false - безопасный режим, true - рискованный
        volume_min:
          type: string
          description: Минимальный объем
        volume_max:
          type: string
          description: Максимальный объем
        markets_buy:
          type: array
          items:
            type: string
          description: Биржи покупки
        markets_sell:
          type: array
          items:
            type: string
          description: Биржи продажи
        monets:
          type: array
          items:
            type: string
          description: Монеты в ЧС
        chains:
          type: array
          items:
            type: string
          description: Сети в ЧС
        subscription_id:
          type: integer
          description: id подписки, 0 - нет подписки
        start_date:
          type: string
          description: Дата начала подписки
        end_date:
          type: string
          description: Дата окончания подписки
        lang:
          type: string
          description: Язык интерфейса

    spread:
      type: object
      properties:
        base_coin:
          type: string
          description: Базовая монета, а паре BTC/USDT - BTC
          required: true
        quote_coin:
          type: string
          description: Базовая монета, а паре BTC/USDT - USDT
          required: true
        ask_market:
          type: string
          description: Биржа покупки
          required: true
        ask_url:
          type: string
          description: Ссылка на монету на бирже покупки
          required: true
        bid_market:
          type: string
          description: Биржа продажи
          required: true
        bid_url:
          type: string
          description: Ссылка на монету на бирже продажи
          required: true
        profit_spread:
          type: string
          description: Прибыль в долларах
          required: true
        percent_spread:
          type: string
          description: Прибыль в процентах
          required: true
        ask_volume:
          type: string
          description: Сумма покупки
          required: true
        bid_volume:
          type: string
          description: Сумма продажи
          required: true
        avg_ask_price:
          type: string
          description: Средняя цена покупки
          required: true
        avg_bid_price:
          type: string
          description: Средняя цена продажи
          required: true
        ask_monets_volume:
          type: string
          description: Количество монет к покупке
          required: true
        bid_monets_volume:
          type: string
          description: Количество монет к продаже
          required: true
        withdraw_fee:
          type: string
          description: Комиссия сети в монетах
          required: true
        withdraw_fee_usdt:
          type: string
          description: Комиссия сети в долларах
          required: true
        ask_spot_fee:
          type: string
          description: Комиссия спота на бирже покупки в долларах
          required: true
        bid_spot_fee:
          type: string
          description: Комиссия спота на бирже продажи в долларах
          required: true
        network:
          type: string
          description: Сеть перевода
          required: true
        ask_index:
          type: integer
          description: Диапазон ордеров для покупки
          required: true
        ask_limits_start:
          type: string
          required: false
          description: Начало диапазона цен на покупку, если только один ордер - отсутствует
        ask_limits_end:
          type: string
          required: false
          description: Конец диапазона цен на покупку, если только один ордер - отсутствует
        bid_index:
          type: integer
          description: Диапазон ордеров для продажи
          required: true
        bid_limits_start:
          type: string
          required: false
          description: Начало диапазона цен на продажу, если только один ордер - отсутствует
        bid_limits_end:
          type: string
          required: false
          description: Конец диапазона цен на продажу, если только один ордер - отсутствует
        hedge:
          type: boolean
          description: False - нет хеджа, True - есть хедж
          required: true
        withdraw_time_category:
          type: integer
          description: 0 - зелёный, 1 - жёлтый, 2 - красный; может отсутствовать
          required: false
        withdraw_time_text:
          type: string
          description: Текстовое описание времени
          required: false

    notification:
      type: object
      properties:
        id:
          type: integer
          description: id уведомления
        title:
          type: string
          description: Заголовок
        content:
          type: string
          description: Содержание
        creation_date:
          type: string
          description: Время создания. Например, "Tue, 13 Jun 2023 21:36:05 GMT"
        if_read:
          type: boolean
          description: Прочитано ли уведомление
        ntype:
          type: string
          description: Тип уведомления, 'text' - текстовое, 'spread' - уведомление о спреде

    error_message:
      type: object
      properties:
        message:
          type: string
          description: Описание ошибки
